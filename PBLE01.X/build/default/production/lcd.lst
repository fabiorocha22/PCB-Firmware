gpasm-1.5.0 #1285 (Sep 12 2016) build/default   7-4-2017  16:37:02          PAGE  1


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.6.0 #9615 (MINGW64)
                      00004 ;--------------------------------------------------------
                      00005 ; PIC16 port for the Microchip 16-bit core micros
                      00006 ;--------------------------------------------------------
                      00007         list    p=18f4520
                      00008         radix   dec
                      00009 
                      00010 
                      00011 ;--------------------------------------------------------
                      00012 ; public variables in this module
                      00013 ;--------------------------------------------------------
  0000                00014         global  _Delay40us
  0000                00015         global  _Delay2ms
  0000                00016         global  _lcdCommand
  0000                00017         global  _lcdData
  0000                00018         global  _lcdInt
  0000                00019         global  _lcdString
  0000                00020         global  _lcdInit
                      00021 
                      00022 ;--------------------------------------------------------
                      00023 ; extern variables in this module
                      00024 ;--------------------------------------------------------
  0000                00025         extern  __gptrget1
  0000                00026         extern  __divsint
  0000                00027         extern  __modsint
                      00028 
                      00029 ;--------------------------------------------------------
                      00030 ;       Equates to used internal registers
                      00031 ;--------------------------------------------------------
  00000FD8            00032 STATUS  equ     0xfd8
  00000FE8            00033 WREG    equ     0xfe8
  00000FE9            00034 FSR0L   equ     0xfe9
  00000FE1            00035 FSR1L   equ     0xfe1
  00000FD9            00036 FSR2L   equ     0xfd9
  00000FEF            00037 INDF0   equ     0xfef
  00000FE6            00038 POSTINC1        equ     0xfe6
  00000FE5            00039 POSTDEC1        equ     0xfe5
  00000FE4            00040 PREINC1 equ     0xfe4
  00000FDB            00041 PLUSW2  equ     0xfdb
  00000FF3            00042 PRODL   equ     0xff3
                      00043 
                      00044 
                      00045 ; Internal registers
                      00046 .registers      udata_ovr       0x0000
000000                00047 r0x00   res     1
000001                00048 r0x01   res     1
000002                00049 r0x02   res     1
000003                00050 r0x03   res     1
000004                00051 r0x04   res     1
000005                00052 r0x05   res     1
000006                00053 r0x06   res     1
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   7-4-2017  16:37:02          PAGE  2


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000007                00054 r0x07   res     1
                      00055 
                      00056 ;--------------------------------------------------------
                      00057 ; global & static initialisations
                      00058 ;--------------------------------------------------------
                      00059 ; I code from now on!
                      00060 ; ; Starting pCode block
                      00061 S_lcd__lcdInit  code
000000                00062 _lcdInit:
                      00063 ;       .line   92; lcd.c       void lcdInit(void) {
000000 CFD9 FFE5      00064         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00065         MOVFF   FSR1L, FSR2L
000008 C??? F???      00066         MOVFF   r0x00, POSTDEC1
                      00067 ;       .line   96; lcd.c       Delay2ms();
00000C EC?? F0??      00068         CALL    _Delay2ms
                      00069 ;       .line   97; lcd.c       Delay2ms();
000010 EC?? F0??      00070         CALL    _Delay2ms
                      00071 ;       .line   98; lcd.c       Delay2ms();
000014 EC?? F0??      00072         CALL    _Delay2ms
                      00073 ;       .line   99; lcd.c       Delay2ms();
000018 EC?? F0??      00074         CALL    _Delay2ms
                      00075 ;       .line   100; lcd.c      Delay2ms();
00001C EC?? F0??      00076         CALL    _Delay2ms
                      00077 ;       .line   101; lcd.c      Delay2ms();
000020 EC?? F0??      00078         CALL    _Delay2ms
                      00079 ;       .line   104; lcd.c      BitClr(TRISE, RS); //RS
000024 EE0F F096      00080         LFSR    0x00, 0xf96
000028 CFEF F000      00081         MOVFF   INDF0, r0x00
00002C 90??           00082         BCF     r0x00, 0
00002E EE0F F096      00083         LFSR    0x00, 0xf96
000032 C??? F???      00084         MOVFF   r0x00, INDF0
                      00085 ;       .line   105; lcd.c      BitClr(TRISE, EN); //EN
000036 EE0F F096      00086         LFSR    0x00, 0xf96
00003A CFEF F000      00087         MOVFF   INDF0, r0x00
00003E 92??           00088         BCF     r0x00, 1
000040 EE0F F096      00089         LFSR    0x00, 0xf96
000044 C??? F???      00090         MOVFF   r0x00, INDF0
                      00091 ;       .line   106; lcd.c      BitClr(TRISE, RW); //RW
000048 EE0F F096      00092         LFSR    0x00, 0xf96
00004C CFEF F000      00093         MOVFF   INDF0, r0x00
000050 94??           00094         BCF     r0x00, 2
000052 EE0F F096      00095         LFSR    0x00, 0xf96
000056 C??? F???      00096         MOVFF   r0x00, INDF0
                      00097 ;       .line   107; lcd.c      TRISD = 0x00; //dados
00005A EE0F F095      00098         LFSR    0x00, 0xf95
00005E 0E00           00099         MOVLW   0x00
000060 6EEF           00100         MOVWF   INDF0
                      00101 ;       .line   108; lcd.c      ADCON1 = 0b00001110; //apenas
000062 EE0F F0C1      00102         LFSR    0x00, 0xfc1
000066 0E0E           00103         MOVLW   0x0e
000068 6EEF           00104         MOVWF   INDF0
                      00105 ;       .line   111; lcd.c      lcdCommand(0x38); //0b0011 1000 8bits, 2 linhas, 5x8
00006A 0E38           00106         MOVLW   0x38
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   7-4-2017  16:37:02          PAGE  3


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

00006C 6EE5           00107         MOVWF   POSTDEC1
00006E EC?? F0??      00108         CALL    _lcdCommand
000072 52E6           00109         MOVF    POSTINC1, F
                      00110 ;       .line   112; lcd.c      lcdCommand(0x0F); //0b0000 1111 display e cursor on, com blink
000074 0E0F           00111         MOVLW   0x0f
000076 6EE5           00112         MOVWF   POSTDEC1
000078 EC?? F0??      00113         CALL    _lcdCommand
00007C 52E6           00114         MOVF    POSTINC1, F
                      00115 ;       .line   113; lcd.c      lcdCommand(0x06); //0b0000 0110 modo incremental
00007E 0E06           00116         MOVLW   0x06
000080 6EE5           00117         MOVWF   POSTDEC1
000082 EC?? F0??      00118         CALL    _lcdCommand
000086 52E6           00119         MOVF    POSTINC1, F
                      00120 ;       .line   114; lcd.c      lcdCommand(0x03); //0b0000 0011 zera variáveis internas
000088 0E03           00121         MOVLW   0x03
00008A 6EE5           00122         MOVWF   POSTDEC1
00008C EC?? F0??      00123         CALL    _lcdCommand
000090 52E6           00124         MOVF    POSTINC1, F
                      00125 ;       .line   115; lcd.c      lcdCommand(0x01); //0b0000 0001 Limpa a tela
000092 0E01           00126         MOVLW   0x01
000094 6EE5           00127         MOVWF   POSTDEC1
000096 EC?? F0??      00128         CALL    _lcdCommand
00009A 52E6           00129         MOVF    POSTINC1, F
00009C CFE4 F000      00130         MOVFF   PREINC1, r0x00
0000A0 CFE4 FFD9      00131         MOVFF   PREINC1, FSR2L
0000A4 0012           00132         RETURN  
                      00133 
                      00134 ; ; Starting pCode block
                      00135 S_lcd__lcdString        code
000000                00136 _lcdString:
                      00137 ;       .line   84; lcd.c       void lcdString(char msg[]) {
000000 CFD9 FFE5      00138         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00139         MOVFF   FSR1L, FSR2L
000008 C??? F???      00140         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00141         MOVFF   r0x01, POSTDEC1
000010 C??? F???      00142         MOVFF   r0x02, POSTDEC1
000014 C??? F???      00143         MOVFF   r0x03, POSTDEC1
000018 C??? F???      00144         MOVFF   r0x04, POSTDEC1
00001C C??? F???      00145         MOVFF   r0x05, POSTDEC1
000020 C??? F???      00146         MOVFF   r0x06, POSTDEC1
000024 C??? F???      00147         MOVFF   r0x07, POSTDEC1
000028 0E02           00148         MOVLW   0x02
00002A CFDB F000      00149         MOVFF   PLUSW2, r0x00
00002E 0E03           00150         MOVLW   0x03
000030 CFDB F000      00151         MOVFF   PLUSW2, r0x01
000034 0E04           00152         MOVLW   0x04
000036 CFDB F000      00153         MOVFF   PLUSW2, r0x02
                      00154 ;       .line   86; lcd.c       while (msg[i]!=0) {
00003A 6A??           00155         CLRF    r0x03
00003C 6A??           00156         CLRF    r0x04
00003E                00157 _00152_DS_:
00003E 50??           00158         MOVF    r0x03, W
000040 24??           00159         ADDWF   r0x00, W
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   7-4-2017  16:37:02          PAGE  4


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000042 6E??           00160         MOVWF   r0x05
000044 50??           00161         MOVF    r0x04, W
000046 20??           00162         ADDWFC  r0x01, W
000048 6E??           00163         MOVWF   r0x06
00004A 6AE8           00164         CLRF    WREG
00004C BE??           00165         BTFSC   r0x04, 7
00004E 68E8           00166         SETF    WREG
000050 20??           00167         ADDWFC  r0x02, W
000052 6E??           00168         MOVWF   r0x07
000054 C??? F???      00169         MOVFF   r0x05, FSR0L
000058 C??? F???      00170         MOVFF   r0x06, PRODL
00005C 50??           00171         MOVF    r0x07, W
00005E EC?? F0??      00172         CALL    __gptrget1
000062 6E??           00173         MOVWF   r0x05
000064 50??           00174         MOVF    r0x05, W
000066 E0??           00175         BZ      _00155_DS_
                      00176 ;       .line   87; lcd.c       lcdData(msg[i]);
000068 50??           00177         MOVF    r0x05, W
00006A 6EE5           00178         MOVWF   POSTDEC1
00006C EC?? F0??      00179         CALL    _lcdData
000070 52E6           00180         MOVF    POSTINC1, F
                      00181 ;       .line   88; lcd.c       i++;
000072 4A??           00182         INFSNZ  r0x03, F
000074 2A??           00183         INCF    r0x04, F
000076 D???           00184         BRA     _00152_DS_
000078                00185 _00155_DS_:
000078 CFE4 F000      00186         MOVFF   PREINC1, r0x07
00007C CFE4 F000      00187         MOVFF   PREINC1, r0x06
000080 CFE4 F000      00188         MOVFF   PREINC1, r0x05
000084 CFE4 F000      00189         MOVFF   PREINC1, r0x04
000088 CFE4 F000      00190         MOVFF   PREINC1, r0x03
00008C CFE4 F000      00191         MOVFF   PREINC1, r0x02
000090 CFE4 F000      00192         MOVFF   PREINC1, r0x01
000094 CFE4 F000      00193         MOVFF   PREINC1, r0x00
000098 CFE4 FFD9      00194         MOVFF   PREINC1, FSR2L
00009C 0012           00195         RETURN  
                      00196 
                      00197 ; ; Starting pCode block
                      00198 S_lcd__lcdInt   code
000000                00199 _lcdInt:
                      00200 ;       .line   71; lcd.c       void lcdInt(int val) {
000000 CFD9 FFE5      00201         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00202         MOVFF   FSR1L, FSR2L
000008 C??? F???      00203         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00204         MOVFF   r0x01, POSTDEC1
000010 C??? F???      00205         MOVFF   r0x02, POSTDEC1
000014 C??? F???      00206         MOVFF   r0x03, POSTDEC1
000018 0E02           00207         MOVLW   0x02
00001A CFDB F000      00208         MOVFF   PLUSW2, r0x00
00001E 0E03           00209         MOVLW   0x03
000020 CFDB F000      00210         MOVFF   PLUSW2, r0x01
                      00211 ;       .line   72; lcd.c       if (val < 0) {
000024 80D8           00212         BSF     STATUS, 0
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   7-4-2017  16:37:02          PAGE  5


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000026 AE??           00213         BTFSS   r0x01, 7
000028 90D8           00214         BCF     STATUS, 0
00002A E3??           00215         BNC     _00146_DS_
                      00216 ;       .line   73; lcd.c       val = val * (-1);
00002C 1E??           00217         COMF    r0x01, F
00002E 6C??           00218         NEGF    r0x00
000030 B4D8           00219         BTFSC   STATUS, 2
000032 2A??           00220         INCF    r0x01, F
                      00221 ;       .line   74; lcd.c       lcdData('-');
000034 0E2D           00222         MOVLW   0x2d
000036 6EE5           00223         MOVWF   POSTDEC1
000038 EC?? F0??      00224         CALL    _lcdData
00003C 52E6           00225         MOVF    POSTINC1, F
00003E                00226 _00146_DS_:
                      00227 ;       .line   79; lcd.c       lcdData((val / 10) % 10 + 48);
00003E 0E00           00228         MOVLW   0x00
000040 6EE5           00229         MOVWF   POSTDEC1
000042 0E0A           00230         MOVLW   0x0a
000044 6EE5           00231         MOVWF   POSTDEC1
000046 50??           00232         MOVF    r0x01, W
000048 6EE5           00233         MOVWF   POSTDEC1
00004A 50??           00234         MOVF    r0x00, W
00004C 6EE5           00235         MOVWF   POSTDEC1
00004E EC?? F0??      00236         CALL    __divsint
000052 6E??           00237         MOVWF   r0x02
000054 CFF3 F000      00238         MOVFF   PRODL, r0x03
000058 0E04           00239         MOVLW   0x04
00005A 26E1           00240         ADDWF   FSR1L, F
00005C 0E00           00241         MOVLW   0x00
00005E 6EE5           00242         MOVWF   POSTDEC1
000060 0E0A           00243         MOVLW   0x0a
000062 6EE5           00244         MOVWF   POSTDEC1
000064 50??           00245         MOVF    r0x03, W
000066 6EE5           00246         MOVWF   POSTDEC1
000068 50??           00247         MOVF    r0x02, W
00006A 6EE5           00248         MOVWF   POSTDEC1
00006C EC?? F0??      00249         CALL    __modsint
000070 6E??           00250         MOVWF   r0x02
000072 CFF3 F000      00251         MOVFF   PRODL, r0x03
000076 0E04           00252         MOVLW   0x04
000078 26E1           00253         ADDWF   FSR1L, F
00007A 0E30           00254         MOVLW   0x30
00007C 26??           00255         ADDWF   r0x02, F
00007E 50??           00256         MOVF    r0x02, W
000080 6EE5           00257         MOVWF   POSTDEC1
000082 EC?? F0??      00258         CALL    _lcdData
000086 52E6           00259         MOVF    POSTINC1, F
                      00260 ;       .line   80; lcd.c       lcdData((val / 1) % 10 + 48);
000088 0E00           00261         MOVLW   0x00
00008A 6EE5           00262         MOVWF   POSTDEC1
00008C 0E0A           00263         MOVLW   0x0a
00008E 6EE5           00264         MOVWF   POSTDEC1
000090 50??           00265         MOVF    r0x01, W
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   7-4-2017  16:37:02          PAGE  6


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000092 6EE5           00266         MOVWF   POSTDEC1
000094 50??           00267         MOVF    r0x00, W
000096 6EE5           00268         MOVWF   POSTDEC1
000098 EC?? F0??      00269         CALL    __modsint
00009C 6E??           00270         MOVWF   r0x00
00009E CFF3 F000      00271         MOVFF   PRODL, r0x01
0000A2 0E04           00272         MOVLW   0x04
0000A4 26E1           00273         ADDWF   FSR1L, F
0000A6 0E30           00274         MOVLW   0x30
0000A8 26??           00275         ADDWF   r0x00, F
0000AA 50??           00276         MOVF    r0x00, W
0000AC 6EE5           00277         MOVWF   POSTDEC1
0000AE EC?? F0??      00278         CALL    _lcdData
0000B2 52E6           00279         MOVF    POSTINC1, F
0000B4 CFE4 F000      00280         MOVFF   PREINC1, r0x03
0000B8 CFE4 F000      00281         MOVFF   PREINC1, r0x02
0000BC CFE4 F000      00282         MOVFF   PREINC1, r0x01
0000C0 CFE4 F000      00283         MOVFF   PREINC1, r0x00
0000C4 CFE4 FFD9      00284         MOVFF   PREINC1, FSR2L
0000C8 0012           00285         RETURN  
                      00286 
                      00287 ; ; Starting pCode block
                      00288 S_lcd__lcdData  code
000000                00289 _lcdData:
                      00290 ;       .line   56; lcd.c       void lcdData(unsigned char valor) {
000000 CFD9 FFE5      00291         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00292         MOVFF   FSR1L, FSR2L
000008 C??? F???      00293         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00294         MOVFF   r0x01, POSTDEC1
000010 0E02           00295         MOVLW   0x02
000012 CFDB F000      00296         MOVFF   PLUSW2, r0x00
                      00297 ;       .line   57; lcd.c       BitSet(PORTE, RS); //dados
000016 EE0F F084      00298         LFSR    0x00, 0xf84
00001A CFEF F000      00299         MOVFF   INDF0, r0x01
00001E 80??           00300         BSF     r0x01, 0
000020 EE0F F084      00301         LFSR    0x00, 0xf84
000024 C??? F???      00302         MOVFF   r0x01, INDF0
                      00303 ;       .line   58; lcd.c       BitClr(PORTE, RW); // habilita escrita
000028 EE0F F084      00304         LFSR    0x00, 0xf84
00002C CFEF F000      00305         MOVFF   INDF0, r0x01
000030 94??           00306         BCF     r0x01, 2
000032 EE0F F084      00307         LFSR    0x00, 0xf84
000036 C??? F???      00308         MOVFF   r0x01, INDF0
                      00309 ;       .line   60; lcd.c       PORTD = valor;
00003A EE0F F083      00310         LFSR    0x00, 0xf83
00003E C??? F???      00311         MOVFF   r0x00, INDF0
                      00312 ;       .line   62; lcd.c       BitSet(PORTE, EN); //Pulso no Enable
000042 EE0F F084      00313         LFSR    0x00, 0xf84
000046 CFEF F000      00314         MOVFF   INDF0, r0x00
00004A 82??           00315         BSF     r0x00, 1
00004C EE0F F084      00316         LFSR    0x00, 0xf84
000050 C??? F???      00317         MOVFF   r0x00, INDF0
                      00318 ;       .line   63; lcd.c       BitClr(PORTE, EN);
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   7-4-2017  16:37:02          PAGE  7


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000054 EE0F F084      00319         LFSR    0x00, 0xf84
000058 CFEF F000      00320         MOVFF   INDF0, r0x00
00005C 92??           00321         BCF     r0x00, 1
00005E EE0F F084      00322         LFSR    0x00, 0xf84
000062 C??? F???      00323         MOVFF   r0x00, INDF0
                      00324 ;       .line   65; lcd.c       BitClr(PORTE, RS); //deixa em nivel baixo por causa do display de 7 seg
000066 EE0F F084      00325         LFSR    0x00, 0xf84
00006A CFEF F000      00326         MOVFF   INDF0, r0x00
00006E 90??           00327         BCF     r0x00, 0
000070 EE0F F084      00328         LFSR    0x00, 0xf84
000074 C??? F???      00329         MOVFF   r0x00, INDF0
                      00330 ;       .line   66; lcd.c       Delay40us();
000078 EC?? F0??      00331         CALL    _Delay40us
00007C CFE4 F000      00332         MOVFF   PREINC1, r0x01
000080 CFE4 F000      00333         MOVFF   PREINC1, r0x00
000084 CFE4 FFD9      00334         MOVFF   PREINC1, FSR2L
000088 0012           00335         RETURN  
                      00336 
                      00337 ; ; Starting pCode block
                      00338 S_lcd__lcdCommand       code
000000                00339 _lcdCommand:
                      00340 ;       .line   40; lcd.c       void lcdCommand(unsigned char cmd) {
000000 CFD9 FFE5      00341         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00342         MOVFF   FSR1L, FSR2L
000008 C??? F???      00343         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00344         MOVFF   r0x01, POSTDEC1
000010 0E02           00345         MOVLW   0x02
000012 CFDB F000      00346         MOVFF   PLUSW2, r0x00
                      00347 ;       .line   41; lcd.c       BitClr(PORTE, RS); //comando
000016 EE0F F084      00348         LFSR    0x00, 0xf84
00001A CFEF F000      00349         MOVFF   INDF0, r0x01
00001E 90??           00350         BCF     r0x01, 0
000020 EE0F F084      00351         LFSR    0x00, 0xf84
000024 C??? F???      00352         MOVFF   r0x01, INDF0
                      00353 ;       .line   42; lcd.c       BitClr(PORTE, RW); // habilita escrita
000028 EE0F F084      00354         LFSR    0x00, 0xf84
00002C CFEF F000      00355         MOVFF   INDF0, r0x01
000030 94??           00356         BCF     r0x01, 2
000032 EE0F F084      00357         LFSR    0x00, 0xf84
000036 C??? F???      00358         MOVFF   r0x01, INDF0
                      00359 ;       .line   44; lcd.c       PORTD = cmd;
00003A EE0F F083      00360         LFSR    0x00, 0xf83
00003E C??? F???      00361         MOVFF   r0x00, INDF0
                      00362 ;       .line   46; lcd.c       BitSet(PORTE, EN); //Pulso no Enable
000042 EE0F F084      00363         LFSR    0x00, 0xf84
000046 CFEF F000      00364         MOVFF   INDF0, r0x01
00004A 82??           00365         BSF     r0x01, 1
00004C EE0F F084      00366         LFSR    0x00, 0xf84
000050 C??? F???      00367         MOVFF   r0x01, INDF0
                      00368 ;       .line   47; lcd.c       BitClr(PORTE, EN);
000054 EE0F F084      00369         LFSR    0x00, 0xf84
000058 CFEF F000      00370         MOVFF   INDF0, r0x01
00005C 92??           00371         BCF     r0x01, 1
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   7-4-2017  16:37:02          PAGE  8


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

00005E EE0F F084      00372         LFSR    0x00, 0xf84
000062 C??? F???      00373         MOVFF   r0x01, INDF0
                      00374 ;       .line   49; lcd.c       if (BitTst(cmd, 1)) { //o comando de reset exige mais tempo
000066 A2??           00375         BTFSS   r0x00, 1
000068 D???           00376         BRA     _00124_DS_
                      00377 ;       .line   50; lcd.c       Delay2ms();
00006A EC?? F0??      00378         CALL    _Delay2ms
00006E D???           00379         BRA     _00126_DS_
000070                00380 _00124_DS_:
                      00381 ;       .line   52; lcd.c       Delay40us();
000070 EC?? F0??      00382         CALL    _Delay40us
000074                00383 _00126_DS_:
000074 CFE4 F000      00384         MOVFF   PREINC1, r0x01
000078 CFE4 F000      00385         MOVFF   PREINC1, r0x00
00007C CFE4 FFD9      00386         MOVFF   PREINC1, FSR2L
000080 0012           00387         RETURN  
                      00388 
                      00389 ; ; Starting pCode block
                      00390 S_lcd__Delay2ms code
000000                00391 _Delay2ms:
                      00392 ;       .line   33; lcd.c       void Delay2ms(void) {
000000 CFD9 FFE5      00393         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00394         MOVFF   FSR1L, FSR2L
000008 C??? F???      00395         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00396         MOVFF   r0x01, POSTDEC1
                      00397 ;       .line   35; lcd.c       for (i = 0; i < 50; i++) {
000010 0E32           00398         MOVLW   0x32
000012 6E??           00399         MOVWF   r0x00
000014                00400 _00117_DS_:
                      00401 ;       .line   36; lcd.c       Delay40us();
000014 EC?? F0??      00402         CALL    _Delay40us
000018 04??           00403         DECF    r0x00, W
00001A 6E??           00404         MOVWF   r0x01
00001C C??? F???      00405         MOVFF   r0x01, r0x00
                      00406 ;       .line   35; lcd.c       for (i = 0; i < 50; i++) {
000020 50??           00407         MOVF    r0x01, W
000022 E1??           00408         BNZ     _00117_DS_
000024 CFE4 F000      00409         MOVFF   PREINC1, r0x01
000028 CFE4 F000      00410         MOVFF   PREINC1, r0x00
00002C CFE4 FFD9      00411         MOVFF   PREINC1, FSR2L
000030 0012           00412         RETURN  
                      00413 
                      00414 ; ; Starting pCode block
                      00415 S_lcd__Delay40us        code
000000                00416 _Delay40us:
                      00417 ;       .line   28; lcd.c       void Delay40us(void) {
000000 CFD9 FFE5      00418         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00419         MOVFF   FSR1L, FSR2L
000008 C??? F???      00420         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00421         MOVFF   r0x01, POSTDEC1
                      00422 ;       .line   30; lcd.c       for (i = 0; i < 10; i++); //valor aproximado
000010 0E0A           00423         MOVLW   0x0a
000012 6E??           00424         MOVWF   r0x00
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   7-4-2017  16:37:02          PAGE  9


LOC    OBJECT CODE    LINE  SOURCE TEXT
  VALUE

000014                00425 _00108_DS_:
000014 04??           00426         DECF    r0x00, W
000016 6E??           00427         MOVWF   r0x01
000018 C??? F???      00428         MOVFF   r0x01, r0x00
00001C 50??           00429         MOVF    r0x01, W
00001E E1??           00430         BNZ     _00108_DS_
000020 CFE4 F000      00431         MOVFF   PREINC1, r0x01
000024 CFE4 F000      00432         MOVFF   PREINC1, r0x00
000028 CFE4 FFD9      00433         MOVFF   PREINC1, FSR2L
00002C 0012           00434         RETURN  
                      00435 
                      00436 
                      00437 
                      00438 ; Statistics:
                      00439 ; code size:      890 (0x037a) bytes ( 0.68%)
                      00440 ;                 445 (0x01bd) words
                      00441 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00442 ; access size:      8 (0x0008) bytes
                      00443 
                      00444 
                      00445         end
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   7-4-2017  16:37:02          PAGE 10


SYMBOL TABLE
  LABEL                              TYPE        VALUE         VALUE          VALUE
                                                 (hex)         (dec)          (text)

FSR0L                             CONSTANT      00000FE9           4073
FSR1L                             CONSTANT      00000FE1           4065
FSR2L                             CONSTANT      00000FD9           4057
INDF0                             CONSTANT      00000FEF           4079
PLUSW2                            CONSTANT      00000FDB           4059
POSTDEC1                          CONSTANT      00000FE5           4069
POSTINC1                          CONSTANT      00000FE6           4070
PREINC1                           CONSTANT      00000FE4           4068
PRODL                             CONSTANT      00000FF3           4083
STATUS                            CONSTANT      00000FD8           4056
WREG                              CONSTANT      00000FE8           4072
_00108_DS_                        ADDRESS       00000014             20
_00117_DS_                        ADDRESS       00000014             20
_00124_DS_                        ADDRESS       00000070            112
_00126_DS_                        ADDRESS       00000074            116
_00146_DS_                        ADDRESS       0000003E             62
_00152_DS_                        ADDRESS       0000003E             62
_00155_DS_                        ADDRESS       00000078            120
_Delay2ms                         GLOBAL        00000000              0
_Delay40us                        GLOBAL        00000000              0
__16_BIT                          CONSTANT      00000001              1
__18F4520                         CONSTANT      00000001              1
__ACC_RAM_LOW_END                 CONSTANT      0000007F            127
__ACC_RAM_LOW_START               CONSTANT      00000000              0
__ACTIVE_BANK_ADDR                VARIABLE      FFFFFFFF             -1
__ASSUMED_BANK_ADDR               VARIABLE      FFFFFFFF             -1
__BANK_0                          CONSTANT      00000000              0
__BANK_1                          CONSTANT      00000100            256
__BANK_2                          CONSTANT      00000200            512
__BANK_3                          CONSTANT      00000300            768
__BANK_4                          CONSTANT      00000400           1024
__BANK_5                          CONSTANT      00000500           1280
__BANK_6                          CONSTANT      00000600           1536
__BANK_7                          CONSTANT      00000700           1792
__BANK_8                          CONSTANT      00000800           2048
__BANK_9                          CONSTANT      00000900           2304
__BANK_10                         CONSTANT      00000A00           2560
__BANK_11                         CONSTANT      00000B00           2816
__BANK_12                         CONSTANT      00000C00           3072
__BANK_13                         CONSTANT      00000D00           3328
__BANK_14                         CONSTANT      00000E00           3584
__BANK_15                         CONSTANT      00000F00           3840
__BANK_BITS                       CONSTANT      00000F00           3840
__BANK_FIRST                      CONSTANT      00000000              0
__BANK_INV                        CONSTANT      FFFFFFFF             -1
__BANK_LAST                       CONSTANT      00000F00           3840
__BANK_MASK                       CONSTANT      000000FF            255
__BANK_SHIFT                      CONSTANT      00000008              8
__BANK_SIZE                       CONSTANT      00000100            256
__CODE_END                        CONSTANT      00007FFF          32767
__CODE_START                      CONSTANT      00000000              0
__COMMON_RAM_END                  CONSTANT      0000007F            127
gpasm-1.5.0 #1285 (Sep 12 2016) build/default   7-4-2017  16:37:02          PAGE 11


SYMBOL TABLE
  LABEL                              TYPE        VALUE         VALUE          VALUE
                                                 (hex)         (dec)          (text)

__COMMON_RAM_START                CONSTANT      00000000              0
__CONFIG_END                      CONSTANT      0030000D        3145741
__CONFIG_START                    CONSTANT      00300000        3145728
__EEPROM_END                      CONSTANT      00F000FF       15728895
__EEPROM_START                    CONSTANT      00F00000       15728640
__EXTENDED                        CONSTANT      00000001              1
__GPUTILS_SVN_VERSION             CONSTANT      00000505           1285
__GPUTILS_VERSION_MAJOR           CONSTANT      00000001              1
__GPUTILS_VERSION_MICRO           CONSTANT      00000000              0
__GPUTILS_VERSION_MINOR           CONSTANT      00000005              5
__IDLOCS_END                      CONSTANT      00200007        2097159
__IDLOCS_START                    CONSTANT      00200000        2097152
__NUM_BANKS                       CONSTANT      00000010             16
__VECTOR_INT_HIGH                 CONSTANT      00000008              8
__VECTOR_INT_LOW                  CONSTANT      00000018             24
__VECTOR_RESET                    CONSTANT      00000000              0
__WHILE_LOOP_COUNT_MAX            CONSTANT      000000FF            255
__divsint                         EXTERNAL      00000000              0
__gptrget1                        EXTERNAL      00000000              0
__modsint                         EXTERNAL      00000000              0
_lcdCommand                       GLOBAL        00000000              0
_lcdData                          GLOBAL        00000000              0
_lcdInit                          GLOBAL        00000000              0
_lcdInt                           GLOBAL        00000000              0
_lcdString                        GLOBAL        00000000              0
r0x00                             STATIC        00000000              0
r0x01                             STATIC        00000001              1
r0x02                             STATIC        00000002              2
r0x03                             STATIC        00000003              3
r0x04                             STATIC        00000004              4
r0x05                             STATIC        00000005              5
r0x06                             STATIC        00000006              6
r0x07                             STATIC        00000007              7

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

